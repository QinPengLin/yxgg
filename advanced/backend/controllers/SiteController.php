<?php
namespace backend\controllers;

use common\helps\PublicMethods;
use Yii;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\LoginForm;
use backend\models\NoticeInfo;

/**
 * Site controller
 */
class SiteController extends Controller
{
   public $ranking=array();//点击前十
   public function init()
   {
       parent::init(); // TODO: Change the autogenerated stub
       Yii::$app->view->params['column']=Yii::$app->params['publicConfig']['column'];//栏目
       Yii::$app->view->params['siteName']=Yii::$app->params['publicConfig']['siteName'];//站点名字
       //实例化模型
       $noticeModel=NoticeInfo::find();
       //查询本页数据
       $list = $noticeModel->select(['notice_title','id','watch_number'])->offset(0)->orderBy('watch_number desc')
           ->limit(10)
           ->asArray()
           ->all();
       foreach ($list as $k=>$v){//ID加密
           $list[$k]=$v;
           $list[$k]['id']=PublicMethods::encryption($v['id']);
       }
       $this->ranking=$list;
       Yii::$app->view->params['articleCounts']=$noticeModel->count();//文章总数
       Yii::$app->view->params['adminQq']=Yii::$app->params['publicConfig']['adminQq'];//管理员QQ
       $sql='select notice_url,game_name_type,id,game_name from notice_info as a where creation_time = (select max(b.creation_time) from notice_info as b where a.game_name_type = b.game_name_type )';
       $data=Yii::$app->db->createCommand($sql)->queryAll();
       shuffle($data);//随机打乱数组
       count($data)==0?$c_l=1:$c_l=count($data);
       $data=array_slice($data,0,rand(1, $c_l));
       foreach ($data as $k=>$v){//ID加密
           $data[$k]=$v;
           $data[$k]['id']=PublicMethods::encryption($v['id']);
       }
       Yii::$app->view->params['laha']=$data;//文章总数
   }

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'actions' => ['login', 'error','test','index','list','home','listcolumn'],
                        'allow' => true,
                    ],
                    [
                        'actions' => ['logout', 'index'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
        ];
    }

    /**
     * Displays homepage.
     *
     * @return string
     */
    public function actionIndex()
    {
        return $this->render('index');
    }

    /**
     * Login action.
     *
     * @return string
     */
    public function actionLogin()
    {
        if (!Yii::$app->user->isGuest) {
            return $this->goHome();
        }

        $model = new LoginForm();
        if ($model->load(Yii::$app->request->post()) && $model->login()) {
            return $this->goBack();
        } else {
            $model->password = '';

            return $this->render('login', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Logout action.
     *
     * @return string
     */
    public function actionLogout()
    {
        Yii::$app->user->logout();

        return $this->goHome();
    }
}
